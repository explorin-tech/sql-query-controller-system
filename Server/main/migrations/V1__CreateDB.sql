CREATE TABLE "UserType"(
	"UT_ID" SERIAL PRIMARY KEY,
	"UT_Name" VARCHAR(2) NOT NULL
);

CREATE TABLE "User"(
	"U_ID" BIGSERIAL PRIMARY KEY,
	"U_FirstName" VARCHAR(30) NOT NULL,
	"U_LastName" VARCHAR(30) NOT NULL,
	"U_Email" VARCHAR(50) NOT NULL,
	"U_Password" VARCHAR(20),
	"U_UT_ID" SERIAL REFERENCES "UserType" ("UT_ID") ON DELETE CASCADE,
	"U_AddedOn"	TIMESTAMPTZ NOT NULL,
	"U_AddedBy" BIGSERIAL,
	"U_UpdatedOn" TIMESTAMPTZ NOT NULL,
	"U_UpdatedBy" BIGSERIAL,
	"U_IsActive" BOOLEAN DEFAULT FALSE,
	"U_IsActDrtUser" BOOLEAN DEFAULT FALSE
);

CREATE TABLE "MasterApplication"(
	"MA_ID" SERIAL PRIMARY KEY,
	"MA_Name" VARCHAR(200) NOT NULL UNIQUE,
	"MA_Owner1" BIGSERIAL REFERENCES "User" ("U_ID"),
	"MA_Owner2" BIGSERIAL REFERENCES "User" ("U_ID"),
	"MA_AddedOn" TIMESTAMPTZ NOT NULL,
	"MA_AddedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL,
	"MA_UpdatedOn" TIMESTAMPTZ NOT NULL,
	"MA_UpdatedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL
);

CREATE TABLE "DataBaseType" (
	"DBT_ID" SERIAL PRIMARY KEY,
	"DBT_Name" VARCHAR(3) NOT NULL UNIQUE
);

CREATE TABLE "DataBaseApplicationMapping"(
	"DBAM_ID" BIGSERIAL PRIMARY KEY,
	"DBAM_MA_ID" SERIAL REFERENCES "MasterApplication" ("MA_ID") ON DELETE CASCADE,
	"DBAM_MA_Name" VARCHAR(200) REFERENCES "MasterApplication" ("MA_Name") ON DELETE CASCADE,
	"DBAM_DBName" VARCHAR(200) NOT NULL,
	"DMAM_DBT_ID" SERIAL REFERENCES "DataBaseType" ("DBT_ID") ON DELETE CASCADE,
	"DMAM_DBT_Name" VARCHAR(3) REFERENCES "DataBaseType" ("DBT_Name") ON DELETE CASCADE,
	"DBAM_DBConnectionString" VARCHAR(500),
	"DBAM_DBPortNumber" INT,
	"DBAM_DBHostName" VARCHAR(100),
	"DBAM_DBPassword" VARCHAR(100),
	"DBAM_AddedOn" TIMESTAMPTZ NOT NULL,
	"DBAM_AddedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL,
	"DBAM_UpdatedOn" TIMESTAMPTZ NOT NULL,
	"DBAM_UpdatedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL
);


CREATE TABLE "ApplicationScreen"(
	"AS_ID" BIGSERIAL PRIMARY KEY,
	"AS_Name" VARCHAR(200) UNIQUE,
	"AS_AddedOn" TIMESTAMPTZ NOT NULL,
	"AS_AddedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL,
	"AS_UpdatedOn" TIMESTAMPTZ NOT NULL,
	"AS_UpdatedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL
);

CREATE TABLE "ApplicationScreenRightsMapping"(
	"ASR_ID" BIGSERIAL PRIMARY KEY,
	"ASR_U_ID" BIGSERIAL REFERENCES "User"("U_ID") ON DELETE CASCADE,
	"ASR_AS_ID" BIGSERIAL REFERENCES "ApplicationScreen"("AS_ID") ON DELETE CASCADE,
	"ASR_RightToView" BOOLEAN DEFAULT FALSE,
	"ASR_RightToAdd" BOOLEAN DEFAULT FALSE,
	"ASR_RightToEdit" BOOLEAN DEFAULT FALSE,
	"ASR_RightToDelete" BOOLEAN DEFAULT FALSE,
	"ASR_AddedOn" TIMESTAMPTZ NOT NULL,
	"ASR_AddedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL,
	"ASR_UpdatedOn" TIMESTAMPTZ NOT NULL,
	"ASR_UpdatedBy" BIGSERIAL REFERENCES "User" ("U_ID") NOT NULL
);

CREATE TABLE "UserPermission"(
	"UP_ID" BIGSERIAL PRIMARY KEY,
	"UP_U_ID" BIGSERIAL REFERENCES "User"("U_ID")  ON DELETE CASCADE,
	"UP_DBAM_ID" BIGSERIAL REFERENCES "DataBaseApplicationMapping"("DBAM_ID") ON DELETE CASCADE,
	"UP_RightToRead" BOOLEAN DEFAULT FALSE,
	"UP_RightToCreate" BOOLEAN DEFAULT FALSE,
	"UP_RightToUpdate" BOOLEAN DEFAULT FALSE,
	"UP_RightToDelete" BOOLEAN DEFAULT FALSE
);

CREATE TABLE "QueryStatus"(
	"QS_ID" SERIAL PRIMARY KEY,
	"QS_Name" VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE "Query"(
	"Q_ID" BIGSERIAL PRIMARY KEY,
	"Q_SysDefName" VARCHAR(200) NOT NULL,
	"Q_UserDefName" VARCHAR(200) NOT NULL,
	"Q_RawQuery" VARCHAR(1000) NOT NULL,
	"Q_QueryDesc" VARCHAR(500) NOT NULL,
	"Q_QS_ID" SERIAL REFERENCES "QueryStatus"("QS_ID"),
	"Q_DBAM_ID" BIGSERIAL REFERENCES "DataBaseApplicationMapping"("DBAM_ID") ON DELETE CASCADE,
	"Q_ExecutedBy" BIGSERIAL REFERENCES "User"("U_ID") ON DELETE CASCADE,
	"Q_LastExecutedOn" TIMESTAMPTZ,
	"Q_CreatedOn" TIMESTAMPTZ,
	"Q_CreatedBy" BIGSERIAL REFERENCES "User"("U_ID") ON DELETE CASCADE,
	"Q_UpdatedOn" TIMESTAMPTZ,
	"Q_UpdatedBy" BIGSERIAL REFERENCES "User"("U_ID") ON DELETE CASCADE,
	"Q_ApprovedOn" TIMESTAMPTZ,
	"Q_ApprovedBy" BIGSERIAL REFERENCES "User"("U_ID") ON DELETE CASCADE,
	"Q_AvgExeTime" INT,
	"Q_NoOfTimesExe" INT,
	"Q_AvgDataRowsAffected" INT,
	"Q_Comments" VARCHAR(1000),
	"Q_IsDrafed" BOOLEAN DEFAULT FALSE,
	"Q_IsDeleted" BOOLEAN DEFAULT FALSE,
	"Q_BackupTableName" VARCHAR(1000)
);

commit;
